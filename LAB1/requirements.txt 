Tasks:
1. Implement at least 3 algorithms for determining Fibonacci n-th term;
2. Decide properties of input format that will be used for algorithm analysis;
3. Decide the comparison metric for the algorithms;
4. Analyze empirically the algorithms;
5. Present the results of the obtained data;
6. Deduce conclusions of the laboratory.


TODO:
1. The purpose of the analysis is established.
2. Choose the efficiency metric to be used (number of executions of an operation (s) or time
execution of all or part of the algorithm.
3. The properties of the input data in relation to which the analysis is performed are established
(data size or specific properties).
4. The algorithm is implemented in a programming language.
5. Generating multiple sets of input data.
6. Run the program for each input data set.
7. The obtained data are analyzed



$$$
Recursive Methods,
Dynamic Programming Methods, Matrix Power Methods, and Benet Formula Methods All those can be
implemented naively or with a certain degree of optimization, that boosts their performance during
analysis.


 4 na√Øve algorithms empirically:
    Comparison Metric
    Recursive Method
    Dynamic Programming Method
    